"""Add APScheduler table to Alembic management

Revision ID: 6104f75cdfe9
Revises: 71631d07966c
Create Date: 2025-10-17 22:57:18.335122

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6104f75cdfe9"
down_revision: Union[str, Sequence[str], None] = "71631d07966c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "apscheduler_jobs",
        "id",
        existing_type=sa.VARCHAR(length=191),
        comment="Unique job identifier",
        existing_nullable=False,
    )
    op.alter_column(
        "apscheduler_jobs",
        "next_run_time",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        comment="Next scheduled run time (Unix timestamp)",
        existing_nullable=True,
    )
    op.alter_column(
        "apscheduler_jobs",
        "job_state",
        existing_type=postgresql.BYTEA(),
        comment="Serialized job state",
        existing_nullable=False,
    )
    op.alter_column(
        "matches",
        "is_processed",
        existing_type=sa.BOOLEAN(),
        comment="Whether this match has been processed for player analysis",
        existing_comment="Whether this match has been processed for smurf detection",
        existing_nullable=False,
    )
    op.alter_column(
        "smurf_detections",
        "confidence",
        existing_type=sa.VARCHAR(length=32),
        comment="Confidence level in the player analysis",
        existing_comment="Confidence level in the smurf detection",
        existing_nullable=True,
    )
    op.alter_column(
        "smurf_detections",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment="When this player analysis was created",
        existing_comment="When this smurf detection was created",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "smurf_detections",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment="When this player analysis was last updated",
        existing_comment="When this smurf detection was last updated",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "smurf_detections",
        "analysis_version",
        existing_type=sa.VARCHAR(length=16),
        comment="Version of the player analysis algorithm",
        existing_comment="Version of the smurf detection algorithm",
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "smurf_detections",
        "analysis_version",
        existing_type=sa.VARCHAR(length=16),
        comment="Version of the smurf detection algorithm",
        existing_comment="Version of the player analysis algorithm",
        existing_nullable=True,
    )
    op.alter_column(
        "smurf_detections",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment="When this smurf detection was last updated",
        existing_comment="When this player analysis was last updated",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "smurf_detections",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        comment="When this smurf detection was created",
        existing_comment="When this player analysis was created",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "smurf_detections",
        "confidence",
        existing_type=sa.VARCHAR(length=32),
        comment="Confidence level in the smurf detection",
        existing_comment="Confidence level in the player analysis",
        existing_nullable=True,
    )
    op.alter_column(
        "matches",
        "is_processed",
        existing_type=sa.BOOLEAN(),
        comment="Whether this match has been processed for smurf detection",
        existing_comment="Whether this match has been processed for player analysis",
        existing_nullable=False,
    )
    op.alter_column(
        "apscheduler_jobs",
        "job_state",
        existing_type=postgresql.BYTEA(),
        comment=None,
        existing_comment="Serialized job state",
        existing_nullable=False,
    )
    op.alter_column(
        "apscheduler_jobs",
        "next_run_time",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        comment=None,
        existing_comment="Next scheduled run time (Unix timestamp)",
        existing_nullable=True,
    )
    op.alter_column(
        "apscheduler_jobs",
        "id",
        existing_type=sa.VARCHAR(length=191),
        comment=None,
        existing_comment="Unique job identifier",
        existing_nullable=False,
    )
    # ### end Alembic commands ###
